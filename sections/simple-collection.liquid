
<div class="simple-collection layout-{{ section.settings.product_count_range }}" data-section-id="{{ section.id }}" data-section-type="simple-collection-section">
  <div class="wrapper">
    <header{% if section.settings.center_heading %} class="centered"{% endif %}>
      {% if section.settings.title != blank %}
        <h4>{{ section.settings.title | escape }}</h4>
      {% endif %}
      {% if section.settings.button_link != blank and section.settings.button_label != blank %}
        <a href="{{ section.settings.button_link }}" class="button outline">{{ section.settings.button_label | escape }}</a>
      {% endif %}
    </header>
    <div class="product-container owl-carousel" id="collection-{{ section.id }}">
    
   
     
       
      {%- assign collection = collections[section.settings.collection] -%}
      {%- assign product_limit = section.settings.product_count_range -%}
     
      {% for product in collection.products limit: product_limit  %}
        
        {% include 'product-grid-item' %}
      {% else %}
        {% for i in (1..product_limit) %}
          {% include 'placeholder-product-grid-item' %}
        {% endfor %}
      {% endfor %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Simple collection",
  "class": "simple-collection-section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Featured collection"
    },
    {
      "type": "checkbox",
      "id": "center_heading",
      "label": "Center heading",
      "default": false
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link"
    },
    {
      "id": "collection",
      "type": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "product_count_range",
      "label": "Number of products",
      "min": 4,
      "max": 20,
      "step": 4,
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Featured collection",
      "category": "Collection"
    }
  ]
}
{% endschema %}
<style>form.hs-event-static span.clickable-btn-over { position: absolute; left: 0; right: 0; bottom: 0; top: 0; font-size: 0; }
form.hs-event-static {position:relative;}</style>
<script type="text/javascript" src="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>

<script>


var swatchVal,swatchVal2;
$('.box.product .product-swatches__li').click(function(){
    swatchVal = $(this).find('.product-swatches__label').text();
});
$('.box.product select[id*=ProductSelect-]').change(function(){
    swatchVal2 = $(this).val();
    $('span.error-size').remove();
});
// $('.simple-collection .box.product input.btn.btn-primary').click(function(){

  $('.simple-collection .box.product .clickable-btn-over').click(function(){
  swatchVal = $(this).parents('.box.product').find('.product-swatches__li a.product-swatches__link--selected .product-swatches__label').text();
  swatchVal2 = $(this).parents('.box.product').find('select[id*=ProductSelect-]').val();
  console.log(swatchVal+"  ++ "+swatchVal2)
  $(this).parents('.box.product').find('#variant-select option').each(function(){
        if($(this).attr('data-title')==swatchVal+" / "+swatchVal2 || $(this).attr('data-title')==swatchVal2+" / "+swatchVal || $(this).attr('data-title')==swatchVal2){ 
             $(this).prop("selected", true);  
            
        }
    });
   var oriValue = $(this).parents('.box.product').find('#variant-select').val();
  
 if(oriValue == '' ){
  
   $("<span class='error-size'>Please select your size</span>").insertAfter(this);

 }else{
  let formData = {
   'items': [{
    'id': oriValue,
    'quantity':1
    }]
  };
    fetch(window.Shopify.routes.root + 'cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    })
    .then(()=>{
      setTimeout(() => {
        this.setAttribute('value','Add To Cart');
      }, "3000")
      this.setAttribute('value','Added');
      this.previousSibling.previousSibling.style.display = "none";
      jQuery.getJSON('/cart.js', function(cart) { jQuery("#CartCount").text(cart.item_count); });
    })
    .catch((error) => {
      console.error('Error:', error);
    });
 }

});
  
  if ($(window).width() <= 650) {
$('#collection-{{section.id}}').slick({
  arrows: false,
  autoplay: true,
  autoplaySpeed: 2000,
});
}
</script>
<script>
  function getUrlFunc($this){
    var productUrlWr = $this.parent().attr('href');
    setTimeout(function(){document.location.href = productUrlWr;},250);
    
  }
  
</script>